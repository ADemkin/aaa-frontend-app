========================
AAA Frontend Application
========================

Описание
========

В этом репозитории находится шаблон для веб приложения для 3-го занятия курса "Frontend для DS-инженера" в Академии Аналитиков Авито.

Приложение позволяет загрузить изображение и распознать на нём текст.

В результате выполнения домашнего задания вы познакомитесь с:

* вёрсткой HTML документа
* CSS фреймворком Bootstrap
* веб фреймворком aiohttp
* шаблонизатором Jinja

Требования
==========

Для работы сервиса вам нужен Docker.


Быстрый старт
=============

1. Сделайте форк этого репозитория
2. Склонируйте форк к себе на компьютер
3. Если у вас macOS или Linux, то выполняйте все команды из этого файла в терминале через `make`
4. Если у вас Windows, то можно выполнять команды вручную, скопировав их из Makefile или использовать `предложенные решения <https://stackoverflow.com/questions/2532234/how-to-run-a-makefile-in-windows>`_.
5. Запустите сервер командой `make dev`
6. Откройте в браузере страницу `http://localhost:8080/`
7. Приложение должно работать - вы увидите инструкции что делать дальше
8. После внесения ваших изменений, не забудьте прогнать тесты и линтеры- без них задание не будет принято
9. Пришлите мне ссылку на ваш репозиторий с выполненным заданием

FYI
===

`make` это утилита, используемая в unix системах для запуска команд из файла `Makefile`.

Установка
=========

Соберите образ для докера::

    make build

Этот шаг будет выполняться автоматически при каждом запуске.

Запуск
======

Для запуска в режиме разработки с автоматической перезагрузкой сервера при
изменении кода::

    make dev


Для запуска приложения в продакшн режиме::

    make run


Тестирование
============

Для запуска тестов::

    make test


Прохождение тестов является обязательными критерием приёмки домашнего задания.


Линтеры
=======

Для запуска линтера и форматтера::

    make lint

Отдельно линтер::

    make ruff

Отдельно форматтер::

    make format

Ruff будет форматировать ваш код и автоматически исправлять некоторые типы ошибок.

Линтеры также будут запускаться через GitHub Actions при каждом пуше.

При нерабочих тестах и линтерах задание не будет принято.


Полезные ссылки
===============

* `Базовый шаблон HTML документа и блоки Bootstrap <https://getbootstrap.com/docs/5.2/getting-started/introduction/>`_
* `Описания HTML тегов и их аттрибутов <https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form>`_
* `MVC паттерн проектирования UI <https://en.wikipedia.org/wiki/Model–view–controller>`_
* `XKCD как пример MPA приложения <https://xkcd.com>`_
* `Документация Jinja <https://jinja.palletsprojects.com/en/3.1.x/>`_
* `Фильтры в Jinja <https://jinja.palletsprojects.com/en/3.1.x/templates/#list-of-builtin-filters>`_
* `Документация aiohttp <https://docs.aiohttp.org/en/stable/>`_
* `Документация ruff <https://docs.astral.sh/ruff/>`_
